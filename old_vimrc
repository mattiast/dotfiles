" Jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

execute pathogen#infect()

syntax on
filetype plugin indent on

set nocompatible
set modelines=0

" Using a dark background within the editing area and syntax highlighting
set background=dark
colorscheme inkpot
set guioptions="c"
set guifont=Bitstream\ Vera\ Sans\ Mono\ 12
set t_Co=256

set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set incsearch		" Incremental search
set hlsearch
set autowrite		" Automatically save before commands like :next and :make
set hidden             " Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes) in terminals
set cindent
set visualbell t_vb=0
set ruler
set ttyfast
set relativenumber
set diffopt=filler,vertical
cabbrev help tab help
set thesaurus+=~/.vim/thesaur/mthesaur.txt
set dictionary+=/usr/share/dict/words

set tabstop=4 shiftwidth=4 softtabstop=4 expandtab
set foldlevelstart=99
set foldmethod=manual

let mapleader = ","
set wildmenu
set laststatus=2

nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>
nnoremap <silent> <leader>n :nohlsearch<CR>
nnoremap <silent> <leader>w :w<cr>
nnoremap <silent> <leader>a :call BufferList()<cr>
nnoremap <silent> <leader>f :FufFile<cr>
nnoremap <silent> <leader>d :FufDir<cr>
nnoremap <silent> <leader>m :FufMruFile<cr>
nnoremap <silent> <leader>r :r! date<cr><cr>O<esc>O
nnoremap <silent> <leader>v :NERDTree<cr>
nnoremap <silent> <leader>g :TagbarToggle<cr>
nnoremap <leader>h :cd %:h<cr>
vnoremap <leader>s "*y
nnoremap <leader>p "*p
vnoremap <leader>' :s/'/ä/g
vnoremap <leader>; :s/;/ö/g

nnoremap <silent> <leader>cs :Gstatus<cr>
nnoremap <silent> <leader>cd :Gdiff<cr>
nnoremap <silent> <leader>cc :Gcommit<cr>
nnoremap <silent> <leader>ce :Gedit HEAD<cr>

vnoremap <leader>vj :call VimuxSendText( @* )<cr>

let g:LatexBox_viewer = "zathura"
let g:LatexBox_Folding = 1
let g:LatexBox_fold_envs = 0
let g:LatexBox_fold_sections = [ 'section' ]

let g:NERDTreeHijackNetrw = 0
let g:NERDTreeQuitOnOpen = 1

let g:syntastic_python_checkers = ['pyflakes']
let g:syntastic_haskell_checkers = ['ghc_mod']
let g:syntastic_idris_checkers = ['idris']
let g:syntastic_haskell_ghc_mod_exec = '/home/mattiast/.local/bin/ghc-mod'
let g:syntastic_tex_chktex_args = '-n1'
let g:syntastic_elm_checkers = ['elm_make']
let g:syntastic_always_populate_loc_list = 1

let g:elm_syntastic_show_warnings = 1
let g:elm_setup_keybindings = 0

let g:haskell_multiline_strings = 1
let g:haskellmode_completion_ghc = 1

let g:neocomplete#enable_at_startup = 1

let g:ledger_bin="hledger"

let g:VimuxOrientation = "h"

let g:tagbar_left = 1
let g:tagbar_autoclose = 1
let g:tagbar_autofocus = 1
let g:tagbar_type_haskell = {
    \ 'ctagsbin'  : 'hasktags',
    \ 'ctagsargs' : '-x -c -o-',
    \ 'kinds'     : [
        \  'm:modules:0:1',
        \  'd:data: 0:1',
        \  'd_gadt: data gadt:0:1',
        \  't:type names:0:1',
        \  'nt:new types:0:1',
        \  'c:classes:0:1',
        \  'cons:constructors:1:1',
        \  'c_gadt:constructor gadt:1:1',
        \  'c_a:constructor accessors:1:1',
        \  'ft:function types:1:1',
        \  'fi:function implementations:0:1',
        \  'o:others:0:1'
    \ ],
    \ 'sro'        : '.',
    \ 'kind2scope' : {
        \ 'm' : 'module',
        \ 'c' : 'class',
        \ 'd' : 'data',
        \ 't' : 'type'
    \ },
    \ 'scope2kind' : {
        \ 'module' : 'm',
        \ 'class'  : 'c',
        \ 'data'   : 'd',
        \ 'type'   : 't'
    \ }
\ }
